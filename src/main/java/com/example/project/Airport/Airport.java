package com.example.project.Airport;
import java.util.ArrayList;

public class Airport  {
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights) {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights() {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue() {
        double total = 0;
        for (Flight individualFlight : allFlights) {
            double individualFlightRev = 0;
            if (individualFlight.getNumPassengers() > individualFlight.getCapacity()) {
                individualFlightRev = individualFlight.getCapacity() * individualFlight.getPrice();
            }else{
                individualFlightRev = individualFlight.getNumPassengers() * individualFlight.getPrice();
            }
            total += individualFlightRev;
        }
        return total;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights() {
        int removedPassengers = 0;
        for (int i = allFlights.size() - 1; i >= 0; i--) {
            Flight flight = allFlights.get(i);
            if (flight.getNumPassengers() < (0.2 * flight.getCapacity())) {
                removedPassengers += flight.getNumPassengers();
                allFlights.remove(i);
            }
        }
        return removedPassengers;
    }
}